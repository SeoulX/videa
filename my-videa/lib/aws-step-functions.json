{
  "Comment": "Video Processing Workflow",
  "StartAt": "ProcessVideo",
  "States": {
    "ProcessVideo": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "DetectLabels",
          "States": {
            "DetectLabels": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "DetectLabelsFunction",
                "Payload": {
                  "videoId.$": "$.videoId",
                  "s3Key.$": "$.s3Key",
                  "bucket.$": "$.bucket"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "DetectFaces",
          "States": {
            "DetectFaces": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "DetectFacesFunction",
                "Payload": {
                  "videoId.$": "$.videoId",
                  "s3Key.$": "$.s3Key",
                  "bucket.$": "$.bucket"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "TranscribeAudio",
          "States": {
            "TranscribeAudio": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "TranscribeAudioFunction",
                "Payload": {
                  "videoId.$": "$.videoId",
                  "s3Key.$": "$.s3Key",
                  "bucket.$": "$.bucket"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Next": "GenerateInsights"
    },
    "GenerateInsights": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "GenerateInsightsFunction",
        "Payload": {
          "videoId.$": "$.videoId",
          "title.$": "$.title",
          "description.$": "$.description"
        }
      },
      "Next": "StoreMetadata"
    },
    "StoreMetadata": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "StoreMetadataFunction",
        "Payload": {
          "videoId.$": "$.videoId",
          "title.$": "$.title",
          "description.$": "$.description"
        }
      },
      "End": true
    }
  }
}

